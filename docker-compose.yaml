version: '3'

networks:
  traefik:
    driver: bridge

services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      --entrypoints.http.address=:80
      --entrypoints.https.address=:443
      --api.insecure=true
      --providers.docker
      --providers.docker.exposedbydefault=false
      --providers.docker.network=proxy
      --providers.docker.watch
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`localhost`)
      - traefik.http.routers.api.entrypoints=http
      - traefik.http.routers.api.service=api@internal
      - traefik.port=8080
    ports:
      - "5000:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik

  whoami:
    container_name: traefik_whoami
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
    networks:
      - traefik

  nginx:
    image: nginx:latest
    container_name: nginx
    expose:
      - "80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`localhost`) && PathPrefix(`/blog`)"
      - "traefik.http.routers.nginx.middlewares=strip-nginx"
      - "traefik.http.middlewares.strip-nginx.stripprefix.prefixes=/blog"
    networks:
      - traefik
